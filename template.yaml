AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  billing-app

  Sample SAM Template for billing-app

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Runtime: python3.9
    MemorySize: 128
    Timeout: !Ref FunctionTimeout
    Handler: function.lambda_handler
    Layers:
        - !Ref Utils
        - 'arn:aws:lambda:eu-west-1:754084371841:layer:pymysql-layer:1'
    Environment:
        Variables:
          DB_ENDPOINT: billing-system-rds.cpgiferzxcuv.eu-west-1.rds.amazonaws.com
          DB_NAME: billappDB
          SECRET_ARN: arn:aws:secretsmanager:eu-west-1:754084371841:secret:billing-database-credentials-Z74qEc      
    VpcConfig:
        SecurityGroupIds:
          - sg-03ef30065e8e1c030
          - sg-0ee34adee005acbf6
        SubnetIds:
          - subnet-02afd2bac133457a9      
  
Parameters:
  MainEngineRole:
    Type: String
    Default: arn:aws:iam::754084371841:role/main-engine-lambda-role
  OutputRole:
    Type: String
    Default: arn:aws:iam::754084371841:role/main-engine-output-cntr
  FunctionTimeout:
    Type: Number
    Default: '10'
  UsersRole:
    Type: String
    Default: arn:aws:iam::754084371841:role/main-engine-users-lambda-role
  PaypalRole:
    Type: String
    Default: arn:aws:iam::754084371841:role/main-engine-paypal-role
  

Resources:
  BillingApi:
    Type: 'AWS::Serverless::Api'
    Properties:      
      Name: billing-api
      StageName: dev1
      OpenApiVersion: "3.0.1"
      DefinitionUri: ./oas.yaml          
      EndpointConfiguration:
        Type: REGIONAL
  
  Utils:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: utils/
      Description: Utilities layer for main engine functions
      LayerName: main-engine-utils
      CompatibleRuntimes:
        - python3.9
    Metadata:
      BuildMethod: python3.9
      

  # --Organizations
  ListOrganizations:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: organizations/list_organizations/
      Description: List Organizations
      FunctionName: organizations-list
      Role: !Ref MainEngineRole
      Events:
        ApiCall:
          Type: Api
          Properties:
            Method: GET
            Path: /organizations
            RestApiId: !Ref BillingApi 
  
  FindOrganizations:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: organizations/find_organizations/
      Description: Find Organizations
      FunctionName: organizations-find
      Role: !Ref MainEngineRole
      Events:
        ApiCall:
          Type: Api
          Properties:
            Method: GET
            Path: /organizations/find
            RestApiId: !Ref BillingApi 
  
  AddOrganization:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: organizations/add_organization/
      Description: Add Organization
      FunctionName: organizations-add
      Environment:
        Variables:
          USER_POOL_ID: eu-west-1_O0r17DvOM
      Role: !Ref UsersRole
      Events:
        ApiCall:
          Type: Api
          Properties:
            Method: POST
            Path: /organizations/
            RestApiId: !Ref BillingApi                         
  
  GetOrganization:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: organizations/get_organization/
      Description: Get Organization
      FunctionName: organizations-get
      Role: !Ref MainEngineRole
      Events:
        ApiCall:
          Type: Api
          Properties:
            Method: GET
            Path: /organizations/{id}
            RestApiId: !Ref BillingApi 

  ChangeOrganizationStatus:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: organizations/change_organization_status/
      Description: Get Organization
      FunctionName: organizations-change-status
      Role: !Ref MainEngineRole
      Events:
        ApiCall:
          Type: Api
          Properties:
            Method: POST
            Path: /organizations/{id}/status
            RestApiId: !Ref BillingApi 

  GetOrganizationAdmin:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: organizations/get_organization_admin/
      Description: (Admin) Get Organization
      FunctionName: organizations-get-admin
      Role: !Ref MainEngineRole
      Events:
        ApiCall:
          Type: Api
          Properties:
            Method: GET
            Path: /organizations/{id}/admin
            RestApiId: !Ref BillingApi 
  
  UpdateOrganization:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: organizations/update_organization/
      Description: update Organization
      FunctionName: organizations-update
      Role: !Ref MainEngineRole
      Events:
        ApiCall:
          Type: Api
          Properties:
            Method: PATCH
            Path: /organizations/{id}
            RestApiId: !Ref BillingApi 
  
  DeleteOrganization:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: organizations/delete_organization/
      Description: Delete Organization
      FunctionName: organizations-delete
      Role: !Ref MainEngineRole
      Events:
        ApiCall:
          Type: Api
          Properties:
            Method: DELETE
            Path: /organizations/{id}
            RestApiId: !Ref BillingApi 
  
  CheckEmailExists:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: organizations/check_email_exists/
      Description: Get Organization
      FunctionName: organizations-check-email-exists
      Role: !Ref MainEngineRole
      Events:
        ApiCall:
          Type: Api
          Properties:
            Method: GET
            Path: /organizations/email
            RestApiId: !Ref BillingApi 
  
  FindMorningId:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: organizations/find_morning_id
      Description: Find the mornign client id of the organization
      FunctionName: organizations-find-morning-id
      Role: !Ref OutputRole
      Environment:
        Variables:
          MORNING_SECRET_ARN: arn:aws:secretsmanager:eu-west-1:754084371841:secret:morning-credentials-RFREGX
      Layers:
        - 'arn:aws:lambda:eu-west-1:754084371841:layer:requests-layer:1'
      Events:
        ApiCall:
          Type: Api
          Properties:
            Method: GET
            Path: /organizations/morning-id
            RestApiId: !Ref BillingApi
  
  GetBalance:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: organizations/get_balance/
      Description: Get Organization Balance
      FunctionName: organizations-balance
      Role: !Ref MainEngineRole
      Events:
        ApiCall:
          Type: Api
          Properties:
            Method: GET
            Path: /organizations/{id}/balance
            RestApiId: !Ref BillingApi
  
  ListOrganizationDocs:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: organizations/list_docs/
      Description: List Organization Documents
      FunctionName: organizations-list-docs
      Role: !Ref MainEngineRole
      Events:
        ApiCall:
          Type: Api
          Properties:
            Method: GET
            Path: /organizations/{id}/docs
            RestApiId: !Ref BillingApi


  # --Accounts
  ListAccounts:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: accounts/list_accounts/
      Description: List Accounts
      FunctionName: accounts-list
      Role: !Ref MainEngineRole
      Events:
        ApiCall:
          Type: Api
          Properties:
            Method: GET
            Path: /accounts
            RestApiId: !Ref BillingApi 

  ListAccountsAdmin:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: accounts/list_accounts_admin/
      Description: List Accounts
      FunctionName: accounts-list-admin
      Role: !Ref MainEngineRole
      Events:
        ApiCall:
          Type: Api
          Properties:
            Method: GET
            Path: /accounts/admin
            RestApiId: !Ref BillingApi 

  AddAccount:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: accounts/add_account/
      Description: Add Account
      FunctionName: accounts-add
      Role: !Ref MainEngineRole
      Events:
        ApiCall:
          Type: Api
          Properties:
            Method: POST
            Path: /accounts
            RestApiId: !Ref BillingApi 
  
  GetAccount:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: accounts/get_account/
      Description: Get Account
      FunctionName: accounts-get
      Role: !Ref MainEngineRole
      Events:
        ApiCall:
          Type: Api
          Properties:
            Method: GET
            Path: /accounts/{id}
            RestApiId: !Ref BillingApi 

  GetAccountAdmin:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: accounts/get_account_admin/
      Description: (Admin) Get Account
      FunctionName: accounts-get-admin
      Role: !Ref MainEngineRole
      Events:
        ApiCall:
          Type: Api
          Properties:
            Method: GET
            Path: /accounts/{id}/admin
            RestApiId: !Ref BillingApi 
  
  UpdateAccount:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: accounts/update_account/
      Description: Update Account
      FunctionName: accounts-update
      Role: !Ref MainEngineRole
      Events:
        ApiCall:
          Type: Api
          Properties:
            Method: PATCH
            Path: /accounts/{id}
            RestApiId: !Ref BillingApi 

  DeleteAccount:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: accounts/delete_account/
      Description: Delete Account
      FunctionName: accounts-delete
      Role: !Ref MainEngineRole
      Events:
        ApiCall:
          Type: Api
          Properties:
            Method: DELETE
            Path: /accounts/{id}
            RestApiId: !Ref BillingApi

  ListPayerAccounts:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: accounts/list_payer_accounts/
      Description: List payer account numbers
      FunctionName: accounts-list-payer-accounts
      Role: !Ref MainEngineRole
      Events:
        ApiCall:
          Type: Api
          Properties:
            Method: GET
            Path: /accounts/payers
            RestApiId: !Ref BillingApi  


  # --Account Services
  ListAccountServices:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: accounts/account_services/list_account_services/
      Description: List account services for an account
      FunctionName: account-services-list
      Role: !Ref MainEngineRole
      Events:
        ApiCall:
          Type: Api
          Properties:
            Method: GET
            Path: /accounts/{id}/services
            RestApiId: !Ref BillingApi   
    
  GetAccountService:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: accounts/account_services/get_account_service/
      Description: Get a single account service
      FunctionName: account-services-get
      Role: !Ref MainEngineRole
      Events:
        ApiCall:
          Type: Api
          Properties:
            Method: GET
            Path: /accounts/{id}/services/{sid}
            RestApiId: !Ref BillingApi
  
  GetAccountServiceAdmin:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: accounts/account_services/get_account_service_admin/
      Description: (Admin) Get a single account service
      FunctionName: account-services-get-admin
      Role: !Ref MainEngineRole
      Events:
        ApiCall:
          Type: Api
          Properties:
            Method: GET
            Path: /accounts/{id}/services/{sid}/admin
            RestApiId: !Ref BillingApi

  ListAccountServicesAdmin:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: accounts/account_services/list_account_services_admin/
      Description: (Admin) List Account Services
      FunctionName: account-services-list-admin
      Role: !Ref MainEngineRole
      Events:
        ApiCall:
          Type: Api
          Properties:
            Method: GET
            Path: /accounts/{id}/services/admin
            RestApiId: !Ref BillingApi 
  
  AddAccountService:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: accounts/account_services/add_account_service/
      Description: Add Account Service
      FunctionName: account-services-add
      Role: !Ref MainEngineRole
      Events:
        ApiCall:
          Type: Api
          Properties:
            Method: POST
            Path: /accounts/{id}/services
            RestApiId: !Ref BillingApi  
  
  DeleteAccountService:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: accounts/account_services/delete_account_service/
      Description: Delete account service
      FunctionName: account-services-delete
      Role: !Ref MainEngineRole
      Events:
        ApiCall:
          Type: Api
          Properties:
            Method: DELETE
            Path: /accounts/{id}/services/{sid}
            RestApiId: !Ref BillingApi  
  
  UpdateAccountService:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: accounts/account_services/update_account_service/
      Description: Update Service Connection To Account
      FunctionName: account-services-update
      Role: !Ref MainEngineRole
      Events:
        ApiCall:
          Type: Api
          Properties:
            Method: PATCH
            Path: /accounts/{id}/services/{sid}
            RestApiId: !Ref BillingApi

  RefreshAccountServices:
    Type: 'AWS::Serverless::Function'
    Properties:
      Timeout: 30
      CodeUri: accounts/account_services/refresh_account_services/
      Description: Refresh account service data for an accoun
      FunctionName: account-services-refresh
      Role: !Ref OutputRole
      Layers:
        - 'arn:aws:lambda:eu-west-1:754084371841:layer:requests-layer:1'
      Environment:
        Variables:
          CNTR_SECRET_ARN: arn:aws:secretsmanager:eu-west-1:754084371841:secret:cntr-credentials-sEq9AZ
          CNTR_API_URL: https://yg192xmrwc.execute-api.eu-west-1.amazonaws.com/dev1
      Events:
        ApiCall:
          Type: Api
          Properties:
            Method: POST
            Path: /accounts/{id}/services/refresh
            RestApiId: !Ref BillingApi

  # --Users
  ListOrganizationUsers:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: users/list_organization_users
      Description: List Organization Users
      FunctionName: users-list-organization-users
      Role: !Ref UsersRole
      Environment:
        Variables:
          USER_POOL_ID: eu-west-1_O0r17DvOM
      Events:
        ApiCall:
          Type: Api
          Properties:
            Method: GET
            Path: /users
            RestApiId: !Ref BillingApi   
  
  ListUsersAdmin:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: users/list_users_admin
      Description: List Users (Admin)
      FunctionName: users-list-admin
      Role: !Ref UsersRole
      Environment:
        Variables:
          USER_POOL_ID: eu-west-1_O0r17DvOM
      Events:
        ApiCall:
          Type: Api
          Properties:
            Method: GET
            Path: /users/admin
            RestApiId: !Ref BillingApi 
  
  AddUser:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: users/add_user
      Description: Add User
      FunctionName: users-add
      Environment:
        Variables:
          USER_POOL_ID: eu-west-1_O0r17DvOM
          APP_CLIENT_ID: 574ui7l7qnhctaba7nrpuuvb4d
      Role: !Ref UsersRole
      Events:
        ApiCall:
          Type: Api
          Properties:
            Method: POST
            Path: /users
            RestApiId: !Ref BillingApi   
            
  GetUser:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: users/get_user
      Description: Get User
      FunctionName: users-get
      Role: !Ref UsersRole
      Environment:
        Variables:
          USER_POOL_ID: eu-west-1_O0r17DvOM
      Events:
        ApiCall:
          Type: Api
          Properties:
            Method: GET
            Path: /users/{sub}
            RestApiId: !Ref BillingApi    

  GetUserAdmin:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: users/get_user_admin
      Description: (Admin) Get User
      FunctionName: users-get-admin
      Role: !Ref UsersRole
      Environment:
        Variables:
          USER_POOL_ID: eu-west-1_O0r17DvOM
      Events:
        ApiCall:
          Type: Api
          Properties:
            Method: GET
            Path: /users/{sub}/admin
            RestApiId: !Ref BillingApi    

  # --Services
  ListServices:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: services/list_services/
      Description: List Services    
      FunctionName: services-list      
      Role: !Ref MainEngineRole
      Events:
        ApiCall:
          Type: Api
          Properties:
            Method: GET
            Path: /services
            RestApiId: !Ref BillingApi
  
  AddService:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: services/add_service/
      Description: Add Service
      FunctionName: services-add
      Role: !Ref MainEngineRole
      Events:
        ApiCall:
          Type: Api
          Properties:
            Method: POST
            Path: /services
            RestApiId: !Ref BillingApi 
   
  UpdateService:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: services/update_service/
      Description: Update Service
      FunctionName: services-update
      Role: !Ref MainEngineRole
      Events:
        ApiCall:
          Type: Api
          Properties:
            Method: PATCH
            Path: /services/{id}
            RestApiId: !Ref BillingApi 

  DeleteService:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: services/delete_service/
      Description: Delete Service
      FunctionName: services-delete
      Role: !Ref MainEngineRole
      Events:
        ApiCall:
          Type: Api
          Properties:
            Method: DELETE
            Path: /services/{id}
            RestApiId: !Ref BillingApi 


  # --Providers  
  ListProviders:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: providers/list_providers/
      Description: List Providers
      FunctionName: providers-list
      Role: !Ref MainEngineRole
      Events:
        ApiCall:
          Type: Api
          Properties:
            Method: GET
            Path: /providers
            RestApiId: !Ref BillingApi 
  
  # --Documents
  CreateProforma:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: documents/create_proforma/
      Description: Create A Proforma Invoice
      FunctionName: documents-create-proforma
      Role: !Ref OutputRole
      Environment:
        Variables:
          MORNING_SECRET_ARN: arn:aws:secretsmanager:eu-west-1:754084371841:secret:morning-credentials-RFREGX
          CNTR_SECRET_ARN: arn:aws:secretsmanager:eu-west-1:754084371841:secret:cntr-credentials-sEq9AZ
          CNTR_API_URL: https://yg192xmrwc.execute-api.eu-west-1.amazonaws.com/dev1
      Layers:
        - 'arn:aws:lambda:eu-west-1:754084371841:layer:requests-layer:1'
      Events:
        ApiCall:
          Type: Api
          Properties:
            Method: POST
            Path: /documents/proformas
            RestApiId: !Ref BillingApi

  ListCurrencies:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: documents/list_currencies/
      Description: List Supported Currencies
      FunctionName: list-currencies
      Environment:
        Variables:          
          MORNING_URL: https://api.greeninvoice.co.il/api/v1/tools/currencies
      Layers:
        - 'arn:aws:lambda:eu-west-1:754084371841:layer:requests-layer:1'
      Events:
        ApiCall:
          Type: Api
          Properties:
            Method: GET
            Path: /documents/currencies
            RestApiId: !Ref BillingApi

  MorningWHTBD:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: documents/morning_wh_TBD/
      Description: Create A Proforma Invoice
      FunctionName: documents-morning-wh-TBD
      Role: !Ref OutputRole
      Environment:
        Variables:
          MORNING_SECRET_ARN: arn:aws:secretsmanager:eu-west-1:754084371841:secret:morning-credentials-RFREGX
          MORNING_URL: https://sandbox.d.greeninvoice.co.il/api/v1/documents
      Layers:
        - 'arn:aws:lambda:eu-west-1:754084371841:layer:requests-layer:1'
      Events:
        ApiCall:
          Type: Api
          Properties:
            Method: POST
            Path: /documents/morning
            RestApiId: !Ref BillingApi
  

  # ** TESTING - TBD **
  IpnTestTBD:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: documents/ipn_test_TBD
      Description: Test Paypal IPN Connections
      FunctionName: ipn-test-TBD
      Role: !Ref PaypalRole
      Layers:
        - 'arn:aws:lambda:eu-west-1:754084371841:layer:requests-layer:1'
      Environment:
        Variables:
          MORNING_SECRET_ARN: arn:aws:secretsmanager:eu-west-1:754084371841:secret:morning-credentials-RFREGX
          PAYPAL_VERIFY_URL: https://ipnpb.sandbox.paypal.com/cgi-bin/webscr
      Events:
        QueueMessage:
          Type: SQS
          Properties:
            Queue: arn:aws:sqs:eu-west-1:754084371841:PaypalQueue
            BatchSize: 12
            MaximumBatchingWindowInSeconds: 60

 
